# Conway's game of Life

## Setup

```elixir
Mix.install([
  {:vega_lite, "~> 0.1.3"},
  {:kino, "~> 0.5.0"}
  # todo: add my elixir implementation of game of life from git
])
```

### Summary

Conway's Game of Life is a cellular automaton that requires no players its evolution is 
determined by entirely by its initial state which leads to increasignly complex and unpredicatable
patterns.

### Initialisation

The game begins on a 2 dimensional grid or graph where the initial configuration determines the 
next state of each cell. We can generate an initial 2D graph with vega lite as follows:

```elixir
alias VegaLite, as: Vl

Vl.new(
  title: "Life",
  width: 600,
  height: 600
)

# todo: data source
|> Vl.data_from_series(x: 0..10, y: 0..10)
|> Vl.mark(:square)

# Map data fields to visual properties of the mark, like position or shape
|> Vl.encode_field(:x, "x", type: :quantitative)
|> Vl.encode_field(:y, "y", type: :quantitative)
```

### Rules

Once an initial configuration of cells that are either alive or dead are placed on the plane,
cells can either be born or die determined by a few simple rules:
1.
2.
3.

```elixir
defmodule GameofLife do
  def init() do
    # seed with initial configuration
  end
end
```

## Untitled
